name: Push Validation

on:
  push:
    branches:
      - main
      - release-*
  pull_request: {}
  workflow_dispatch: {}

env:
  # Common versions
  GO_VERSION: '1.24'
  GOLANGCI_VERSION: 'v1.64.8'
  DOCKER_BUILDX_VERSION: 'v0.8.2'
  DOCKER_USR: ${{ secrets.DOCKER_USR }}

jobs:
  detect-noop:
    runs-on: ubuntu-22.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@0c0fd7dfd27f1de7871e98791077b9ae5f1d8757 # v2.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  e2e:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
        with:
          submodules: true

      - name: Fetch History
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492 # v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "::set-output name=cache::$(go env GOCACHE)"

      - name: Cache the Go Build Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-unit-tests-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-unit-tests-

      - name: Cache Go Dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Login to Docker
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1
        if: env.DOCKER_USR != ''
        with:
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PSW }}

      - name: Push Validation Tests
        run: make e2e
        env:
          LOCALDEV_UBC_PERMISSION: edit
          LOCALDEV_CONNECT_CLEANUP: true
          LOCALDEV_CONNECT_CP_ORG: crossplane
          LOCALDEV_CONNECT_CP_NAME: uxp-pushval-${{ github.run_id }}-${{ github.run_number }}
          LOCALDEV_CONNECT_API_TOKEN: ${{ secrets.LOCALDEV_CONNECT_API_TOKEN }}
          UPBOUND_API_ENDPOINT: ${{ secrets.UPBOUND_API_ENDPOINT }}
          UPBOUND_CONNECT_ENDPOINT: ${{ secrets.UPBOUND_CONNECT_ENDPOINT }}
          UPBOUND_PROXY_ENDPOINT: ${{ secrets.UPBOUND_PROXY_ENDPOINT }}
          # CLI Configuration
          UP_ENDPOINT: https://${{ secrets.UPBOUND_API_ENDPOINT }}
